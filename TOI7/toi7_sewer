#include<bits/stdc++.h>
using namespace std;
using pii=pair<int,int>;
const int N=105;
queue<pii> q;
int vis[N][N];
char a[N][N];

int main(){
	ios::sync_with_stdio(0); cin.tie(0);
	int n,m;
	cin >> n >> m;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			cin >> a[i][j];
			vis[i][j]=1e9;
		}
	}
	q.push({1,1});
	vis[1][1]=0;
	while(!q.empty()){
		int x=q.front().first;
		int y=q.front().second;
		q.pop();
//		cout << x << ' ' << y << "\n";
		if(a[x][y]=='D'|| a[x][y]=='B'){
			if(vis[x+1][y]>vis[x][y]+1){
				vis[x+1][y]=vis[x][y]+1;
				q.push({x+1,y});
			}
			else if(vis[x+1][y]==vis[x][y]+1){
				cout << vis[x+1][y]+1 << "\n" << x+1 << ' ' << y;
				return 0;
			} 
			
		}
		if(a[x-1][y]=='D' || a[x-1][y]=='B'){
			if(vis[x-1][y]>vis[x][y]+1){
				vis[x-1][y]=vis[x][y]+1;
				q.push({x-1,y});
			}
			else if(vis[x-1][y]==vis[x][y]+1){
				cout << vis[x-1][y]+1 << "\n" << x-1 << ' ' << y;
				return 0;
			} 			
		}
		
		if(a[x][y]=='R' || a[x][y]=='B'){
			if(vis[x][y+1]>vis[x][y]+1){
				vis[x][y+1]=vis[x][y]+1;
				q.push({x,y+1});
			}
			else if(vis[x][y+1]==vis[x][y]+1){
				cout << vis[x][y+1]+1 << "\n" << x << ' ' << y+1;
				return 0;
			} 							
		}
		if(a[x][y-1]=='R' || a[x][y-1]=='B'){
			if(vis[x][y-1]>vis[x][y]+1){
				vis[x][y-1]=vis[x][y]+1;
				q.push({x,y-1});
			}
			else if(vis[x][y-1]==vis[x][y]+1){
				cout << vis[x][y-1]+1 << "\n" << x << ' ' << y-1;
				return 0;
			} 				
		}
	}
}
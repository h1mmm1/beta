#include<bits/stdc++.h>
using namespace std;
const int N=155;
int a[N][N],vis[N][N];
queue<pair<int,int>> q;
int dx[]={0,0,1,-1};
int dy[]={1,-1,0,0};

int main(){
	ios::sync_with_stdio(0); cin.tie(0);
	int n,m,x1,y1,x2,y2;
	cin >> n >> m >>x1 >> y1 >> x2 >> y2;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			cin >> a[i][j];
		}
	}
	q.push({x1,y1});
	vis[x1][y1]=1;
	while(!q.empty()){
		int x=q.front().first;
		int y=q.front().second;
		q.pop();
		for(int i=0;i<4;i++){
			int xx=x+dx[i];
			int yy=y+dy[i];
			if(xx<1 || yy<1 || xx>n || yy>m) continue;
			if(a[xx][yy]==1 && vis[xx][yy]==0){
				vis[xx][yy]=vis[x][y]+1;
				q.push({xx,yy});
			}
			else if(a[xx][yy]==0) vis[xx][yy]=vis[x][y]+1;
		}
	}
	int ans1=0,ans2=INT_MAX;
	q.push({x2,y2});
	vis[x2][y2]=1;
	while(!q.empty()){
		int x=q.front().first;
		int y=q.front().second;
		q.pop();
		for(int i=0;i<4;i++){
			int xx=x+dx[i];
			int yy=y+dy[i];
			if(xx<1 || yy<1 || xx>n || yy>m) continue;
			if(vis[xx][yy]!=0 && a[xx][yy]==0){
				vis[xx][yy]+=vis[x][y];
				ans2=min(ans2,vis[xx][yy]);
				ans1++;
				a[xx][yy]=-1;
			}			
			else if(vis[xx][yy]==0 && a[xx][yy]==1){
				vis[xx][yy]=vis[x][y]+1;
				q.push({xx,yy});
			}
		}
	}
	cout << ans1 << '\n' << ans2;
}
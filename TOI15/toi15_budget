#include<bits/stdc++.h>
using namespace std;
using ppi=pair<int,int>;
using pii=pair<ppi,ppi>;
const int N=3005,M=300005;
vector<pii> p;
ppi num[M];
int pa[N];

int find(int v){
	if(pa[v]==v) return v;
	return pa[v]=find(pa[v]);
}

void U(int a,int b){
	a=find(a);
	b=find(b);
	if(a!=b){
		pa[a]=b;
	}
}

int main(){
	ios::sync_with_stdio(0); cin.tie(0);
	int n,m;
	cin >> n >> m;
	for(int i=0;i<=n;i++) pa[i]=i;
	for(int i=1;i<=m;i++){
		int a,b,c,d;
		cin >> a >> b >> c >> d;
		if(d==1) c=0;
		p.push_back({{c,d},{a,b}});
	}
	sort(p.begin(),p.end());
	int k;
	cin >> k;
	for(int i=1;i<=k;i++){
		cin >> num[i].first >> num[i].second;
	}
	sort(num+1,num+1+k);
	for(int i=k-1;i>=1;i--){
		num[i].second=min(num[i].second,num[i+1].second);
	}
//	for(int i=1;i<=k;i++) cout << num[i].first  << ' ';
	int ans=0;
	for(auto e:p){
		int l=e.first.first;
		int d=e.first.second;
		int x=e.second.first;
		int y=e.second.second;
		if(find(x)!=find(y)){
			U(x,y);
			if(d==0){
				ppi c={l,0};
				auto v=lower_bound(num+1,num+1+k,c)-num;
				ans+=num[v].second;
//				cout << num[v].second << "\n";
			}
//			cout << x << ' ' << y << ' ' << l << "\n";
		}
	}
	cout << ans;
}
#include<bits/stdc++.h>
using namespace std;
const int N=5005;
int a[N],dp[N][N],ans[N][N];
int n;

inline int rec(int l,int r){
	if(l==r) return a[l];
	if(dp[l][r]!=-1) return dp[l][r];
	int cnt=max(rec(l+1,r)+abs(a[l]-a[r])+a[l],rec(l,r-1)+abs(a[l]-a[r])+a[r]);
	return dp[l][r]=cnt;
}

inline int dfs(int l,int r){
	if(l==r) return 0;
	if(ans[l][r]!=-1) return ans[l][r];
	int cnt=0;
	for(int i=l;i<=r;i++){
		cnt=max(cnt,rec(l,i)+dfs(i+1,r));
	}
	return ans[l][r]=cnt;
}

int main(){
	ios::sync_with_stdio(0); cin.tie(0);	
	memset(dp,-1,sizeof dp);
	memset(ans,-1,sizeof ans);
	cin >> n;
	for(int i=1;i<=n;i++){
		cin >> a[i];
	}
	cout << dfs(1,n);
}